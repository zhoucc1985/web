<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
    <!-- 使用说明 -->
    <!-- 修改（com.mysql.jdbc.Driver）数据库地址-->
    <!-- 修改文件生成目录（E:\test），生成会生成到本地，自行复制粘贴-->
    <!-- 在文件最后添加自己要生成的表 -->
    <!-- 完成后进入（com.cloud.mybatisgenerator.GeneratorMain）运行生成代码 -->

    <!-- 注意 （com.cloud.mybatisgenerator.LombokPlugin）进入这个文件进行自定义文件备注-->



    <!--执行generator插件生成文件的命令： call mvn mybatis-generator:generate -e -->
    <!--
    context:生成一组对象的环境
    id:必选，上下文id，用于在生成错误时提示
    defaultModelType:指定生成对象的样式
        1，conditional：类似hierarchical；
        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
    targetRuntime:
        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
    introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="MysqlTables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="true" />
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="utf-8" />
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`" />
        <property name="endingDelimiter" value="`" />

        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <!--指定插件类-->
        <plugin type="com.cloud.mybatisgenerator.LombokPlugin" >
            <property name="hasLombok" value="true"/>
        </plugin>
        <!--关闭注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- jdbc连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://192.168.21.11:3306/system_cloud?useSSL=false" userId="root" password="Sunmnet@123">
        </jdbcConnection>
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 配置生成xxx.java实体类文件目录及文件所属包目录 根据自己的需求进行修改配置-->
        <javaModelGenerator targetPackage="com.cloud.entity.datacollect" targetProject="E:\generator\BigData.DataCollection.Web\src\main\java" >
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 配置生成xxxMapper.xml文件目录及文件所属包目录 根据自己的需求进行修改配置-->
        <sqlMapGenerator targetPackage="datacollect" targetProject="E:\generator\BigData.DataCollection.Web\src\main\resources\mapper" >
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>
        <!-- 配置生成xxxMapper.java文件目录及文件所属包目录 根据自己的需求进行修改配置-->
        <javaClientGenerator targetPackage="com.cloud.mapper.datacollect" targetProject="E:\generator\BigData.DataCollection.Web\src\main\java" type="XMLMAPPER" >
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>
        <!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素-->
        <!--<table tableName="t_dbdatasource" enableCountByExample="false" domainObjectName="DBDatasource"-->
               <!--enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="true">-->
            <!--<generatedKey column="id" sqlStatement="JDBC"/>-->
        <!--</table>-->
        <!--<table tableName="t_field_info" enableCountByExample="false" domainObjectName="FieldInfo"-->
               <!--enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="true">-->
            <!--<generatedKey column="id" sqlStatement="JDBC"/>-->
        <!--</table>-->
        <!--<table tableName="t_ftp_info" enableCountByExample="false" domainObjectName="FileInfo"-->
               <!--enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="true">-->
            <!--<generatedKey column="id" sqlStatement="JDBC"/>-->
        <!--</table>-->
        <!--<table tableName="t_ftp_stat" enableCountByExample="false" domainObjectName="FtpStat"-->
               <!--enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="true">-->
            <!--<generatedKey column="id" sqlStatement="JDBC"/>-->
        <!--</table>-->
        <table tableName="collect_batchids" enableCountByExample="false" domainObjectName="CollectBatchids"
               enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="true">
            <generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <!--<table tableName="t_table_info" enableCountByExample="false" domainObjectName="TableInfo"-->
               <!--enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="true">-->
            <!--<generatedKey column="id" sqlStatement="JDBC"/>-->
        <!--</table>-->
        <!--<table tableName="t_table_stat" enableCountByExample="false" domainObjectName="TableStat"-->
               <!--enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="true">-->
            <!--<generatedKey column="id" sqlStatement="JDBC"/>-->
        <!--</table>-->

    </context>
</generatorConfiguration>