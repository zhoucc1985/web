<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.mapper.real.datacollect.RealTestMapper">
  <resultMap id="BaseResultMap" type="com.cloud.entity.datacollect.test">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`
  </sql>
  <select id="selectByExample" parameterType="com.cloud.entity.datacollect.testExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloud.entity.datacollect.testExample">
    delete from test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cloud.entity.datacollect.test" useGeneratedKeys="true">
    insert into test (`name`)
    values (#{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cloud.entity.datacollect.test" useGeneratedKeys="true">
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloud.entity.datacollect.testExample" resultType="java.lang.Long">
    select count(*) from test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.entity.datacollect.test">
    update test
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.entity.datacollect.test">
    update test
    set `name` = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getColumnFiledsByTableName" resultType="java.util.Map">
		SELECT
		T1.TABLE_NAME AS STABLENAME,
		T2.TABLE_COMMENT AS STABLECOMMENT,
		T1.COLUMN_NAME AS SFIELDNAME,
		T1.COLUMN_COMMENT AS SCOLUMNCOMMENT,
		(CASE T1.IS_NULLABLE WHEN 'NO'THEN 'N'ELSE 'Y'END )AS IREQUIRED,
		T1.DATA_TYPE AS IFIELDTYPE,
		(CASE WHEN T1.CHARACTER_MAXIMUM_LENGTH IS
		NULL THEN 0 ELSE
		T1.CHARACTER_MAXIMUM_LENGTH END )AS IFIELDLENGTH,
		(
		CASE WHEN T1.NUMERIC_PRECISION IS NULL THEN 0 ELSE
		T1.NUMERIC_PRECISION END )AS IFIELDPREC,
		T1.NUMERIC_SCALE AS
		IFIELDSCALE,
		(CASE T1.COLUMN_KEY WHEN 'PRI'THEN 'P'ELSE ''END ) AS
		SCONSTRAINTTYPE,
		T1.COLUMN_DEFAULT AS SDEFAULTVALUE,
		T1.ORDINAL_POSITION AS SORT
		FROM
		INFORMATION_SCHEMA.COLUMNS T1
		JOIN
		INFORMATION_SCHEMA.TABLES T2
		ON
		T1.TABLE_NAME = T2.TABLE_NAME
		AND
		T1.TABLE_SCHEMA = T2.TABLE_SCHEMA
		WHERE
		T1.TABLE_SCHEMA = DATABASE()
		AND
		T1.COLUMN_NAME NOT LIKE 'sys_%'
		<if test="realTableName != null and realTableName.size > 0">
			AND T1.TABLE_NAME in
			<foreach item="item" collection="realTableName" separator=","
				open="(" close=")" index="">#{item, jdbcType=VARCHAR}</foreach>
		</if>
		ORDER BY
		T1.TABLE_NAME,T1.COLUMN_NAME
	</select>
</mapper>